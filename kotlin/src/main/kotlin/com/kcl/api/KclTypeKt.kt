// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializekclType")
public inline fun kclType(block: com.kcl.api.KclTypeKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.KclType =
  com.kcl.api.KclTypeKt.Dsl._create(com.kcl.api.Spec.KclType.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message representing a KCL type.
 * ```
 *
 * Protobuf type `com.kcl.api.KclType`
 */
public object KclTypeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.KclType.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.KclType.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.KclType = _builder.build()

    /**
     * ```
     * Type name (e.g., schema, dict, list, str, int, float, bool, any, union, number_multiplier).
     * ```
     *
     * `string type = 1;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    /**
     * ```
     * Type name (e.g., schema, dict, list, str, int, float, bool, any, union, number_multiplier).
     * ```
     *
     * `string type = 1;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UnionTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     */
     public val unionTypes: com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.unionTypesList
      )
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     * @param value The unionTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUnionTypes")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.add(value: com.kcl.api.Spec.KclType) {
      _builder.addUnionTypes(value)
    }
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     * @param value The unionTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUnionTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.plusAssign(value: com.kcl.api.Spec.KclType) {
      add(value)
    }
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     * @param values The unionTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUnionTypes")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.addAll(values: kotlin.collections.Iterable<com.kcl.api.Spec.KclType>) {
      _builder.addAllUnionTypes(values)
    }
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     * @param values The unionTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUnionTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.plusAssign(values: kotlin.collections.Iterable<com.kcl.api.Spec.KclType>) {
      addAll(values)
    }
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     * @param index The index to set the value at.
     * @param value The unionTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUnionTypes")
    public operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.set(index: kotlin.Int, value: com.kcl.api.Spec.KclType) {
      _builder.setUnionTypes(index, value)
    }
    /**
     * ```
     * Union types if applicable.
     * ```
     *
     * `repeated .com.kcl.api.KclType union_types = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUnionTypes")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KclType, UnionTypesProxy>.clear() {
      _builder.clearUnionTypes()
    }


    /**
     * ```
     * Default value of the type.
     * ```
     *
     * `string default = 3;`
     */
    public var default: kotlin.String
      @JvmName("getDefault")
      get() = _builder.default
      @JvmName("setDefault")
      set(value) {
        _builder.default = value
      }
    /**
     * ```
     * Default value of the type.
     * ```
     *
     * `string default = 3;`
     */
    public fun clearDefault() {
      _builder.clearDefault()
    }

    /**
     * ```
     * Name of the schema if applicable.
     * ```
     *
     * `string schema_name = 4;`
     */
    public var schemaName: kotlin.String
      @JvmName("getSchemaName")
      get() = _builder.schemaName
      @JvmName("setSchemaName")
      set(value) {
        _builder.schemaName = value
      }
    /**
     * ```
     * Name of the schema if applicable.
     * ```
     *
     * `string schema_name = 4;`
     */
    public fun clearSchemaName() {
      _builder.clearSchemaName()
    }

    /**
     * ```
     * Documentation for the schema.
     * ```
     *
     * `string schema_doc = 5;`
     */
    public var schemaDoc: kotlin.String
      @JvmName("getSchemaDoc")
      get() = _builder.schemaDoc
      @JvmName("setSchemaDoc")
      set(value) {
        _builder.schemaDoc = value
      }
    /**
     * ```
     * Documentation for the schema.
     * ```
     *
     * `string schema_doc = 5;`
     */
    public fun clearSchemaDoc() {
      _builder.clearSchemaDoc()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PropertiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
     public val properties: com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getPropertiesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.propertiesMap
      )
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
    @JvmName("putProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      .put(key: kotlin.String, value: com.kcl.api.Spec.KclType) {
         _builder.putProperties(key, value)
       }
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      .set(key: kotlin.String, value: com.kcl.api.Spec.KclType) {
         put(key, value)
       }
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      .remove(key: kotlin.String) {
         _builder.removeProperties(key)
       }
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.kcl.api.Spec.KclType>) {
         _builder.putAllProperties(map)
       }
    /**
     * ```
     * Properties of the schema as a map with property name as key.
     * ```
     *
     * `map<string, .com.kcl.api.KclType> properties = 6;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.KclType, PropertiesProxy>
      .clear() {
         _builder.clearProperties()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RequiredProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @return A list containing the required.
     */
    public val required: com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.requiredList
      )
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @param value The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.add(value: kotlin.String) {
      _builder.addRequired(value)
    }
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @param value The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRequired")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @param values The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllRequired(values)
    }
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @param values The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRequired")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     * @param index The index to set the value at.
     * @param value The required to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRequired")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setRequired(index, value)
    }/**
     * ```
     * List of required schema properties.
     * ```
     *
     * `repeated string required = 7;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.clear() {
      _builder.clearRequired()
    }
    /**
     * ```
     * Key type if the KclType is a dictionary.
     * ```
     *
     * `.com.kcl.api.KclType key = 8;`
     */
    public var key: com.kcl.api.Spec.KclType
      @JvmName("getKey")
      get() = _builder.key
      @JvmName("setKey")
      set(value) {
        _builder.key = value
      }
    /**
     * ```
     * Key type if the KclType is a dictionary.
     * ```
     *
     * `.com.kcl.api.KclType key = 8;`
     */
    public fun clearKey() {
      _builder.clearKey()
    }
    /**
     * ```
     * Key type if the KclType is a dictionary.
     * ```
     *
     * `.com.kcl.api.KclType key = 8;`
     * @return Whether the key field is set.
     */
    public fun hasKey(): kotlin.Boolean {
      return _builder.hasKey()
    }

    public val KclTypeKt.Dsl.keyOrNull: com.kcl.api.Spec.KclType?
      get() = _builder.keyOrNull

    /**
     * ```
     * Item type if the KclType is a list or dictionary.
     * ```
     *
     * `.com.kcl.api.KclType item = 9;`
     */
    public var item: com.kcl.api.Spec.KclType
      @JvmName("getItem")
      get() = _builder.item
      @JvmName("setItem")
      set(value) {
        _builder.item = value
      }
    /**
     * ```
     * Item type if the KclType is a list or dictionary.
     * ```
     *
     * `.com.kcl.api.KclType item = 9;`
     */
    public fun clearItem() {
      _builder.clearItem()
    }
    /**
     * ```
     * Item type if the KclType is a list or dictionary.
     * ```
     *
     * `.com.kcl.api.KclType item = 9;`
     * @return Whether the item field is set.
     */
    public fun hasItem(): kotlin.Boolean {
      return _builder.hasItem()
    }

    public val KclTypeKt.Dsl.itemOrNull: com.kcl.api.Spec.KclType?
      get() = _builder.itemOrNull

    /**
     * ```
     * Line number where the type is defined.
     * ```
     *
     * `int32 line = 10;`
     */
    public var line: kotlin.Int
      @JvmName("getLine")
      get() = _builder.line
      @JvmName("setLine")
      set(value) {
        _builder.line = value
      }
    /**
     * ```
     * Line number where the type is defined.
     * ```
     *
     * `int32 line = 10;`
     */
    public fun clearLine() {
      _builder.clearLine()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DecoratorsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     */
     public val decorators: com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.decoratorsList
      )
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     * @param value The decorators to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDecorators")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.add(value: com.kcl.api.Spec.Decorator) {
      _builder.addDecorators(value)
    }
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     * @param value The decorators to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDecorators")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.plusAssign(value: com.kcl.api.Spec.Decorator) {
      add(value)
    }
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     * @param values The decorators to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDecorators")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.addAll(values: kotlin.collections.Iterable<com.kcl.api.Spec.Decorator>) {
      _builder.addAllDecorators(values)
    }
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     * @param values The decorators to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDecorators")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.plusAssign(values: kotlin.collections.Iterable<com.kcl.api.Spec.Decorator>) {
      addAll(values)
    }
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     * @param index The index to set the value at.
     * @param value The decorators to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDecorators")
    public operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.set(index: kotlin.Int, value: com.kcl.api.Spec.Decorator) {
      _builder.setDecorators(index, value)
    }
    /**
     * ```
     * List of decorators for the schema.
     * ```
     *
     * `repeated .com.kcl.api.Decorator decorators = 11;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDecorators")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Decorator, DecoratorsProxy>.clear() {
      _builder.clearDecorators()
    }


    /**
     * ```
     * Absolute path of the file where the attribute is located.
     * ```
     *
     * `string filename = 12;`
     */
    public var filename: kotlin.String
      @JvmName("getFilename")
      get() = _builder.filename
      @JvmName("setFilename")
      set(value) {
        _builder.filename = value
      }
    /**
     * ```
     * Absolute path of the file where the attribute is located.
     * ```
     *
     * `string filename = 12;`
     */
    public fun clearFilename() {
      _builder.clearFilename()
    }

    /**
     * ```
     * Path of the package where the attribute is located.
     * ```
     *
     * `string pkg_path = 13;`
     */
    public var pkgPath: kotlin.String
      @JvmName("getPkgPath")
      get() = _builder.pkgPath
      @JvmName("setPkgPath")
      set(value) {
        _builder.pkgPath = value
      }
    /**
     * ```
     * Path of the package where the attribute is located.
     * ```
     *
     * `string pkg_path = 13;`
     */
    public fun clearPkgPath() {
      _builder.clearPkgPath()
    }

    /**
     * ```
     * Documentation for the attribute.
     * ```
     *
     * `string description = 14;`
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.description
      @JvmName("setDescription")
      set(value) {
        _builder.description = value
      }
    /**
     * ```
     * Documentation for the attribute.
     * ```
     *
     * `string description = 14;`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ExamplesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
     public val examples: com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getExamplesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.examplesMap
      )
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
    @JvmName("putExamples")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      .put(key: kotlin.String, value: com.kcl.api.Spec.Example) {
         _builder.putExamples(key, value)
       }
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setExamples")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      .set(key: kotlin.String, value: com.kcl.api.Spec.Example) {
         put(key, value)
       }
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeExamples")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      .remove(key: kotlin.String) {
         _builder.removeExamples(key)
       }
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllExamples")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.kcl.api.Spec.Example>) {
         _builder.putAllExamples(map)
       }
    /**
     * ```
     * Map of examples with example name as key.
     * ```
     *
     * `map<string, .com.kcl.api.Example> examples = 15;`
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearExamples")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.kcl.api.Spec.Example, ExamplesProxy>
      .clear() {
         _builder.clearExamples()
       }

    /**
     * ```
     * Base schema if applicable.
     * ```
     *
     * `.com.kcl.api.KclType base_schema = 16;`
     */
    public var baseSchema: com.kcl.api.Spec.KclType
      @JvmName("getBaseSchema")
      get() = _builder.baseSchema
      @JvmName("setBaseSchema")
      set(value) {
        _builder.baseSchema = value
      }
    /**
     * ```
     * Base schema if applicable.
     * ```
     *
     * `.com.kcl.api.KclType base_schema = 16;`
     */
    public fun clearBaseSchema() {
      _builder.clearBaseSchema()
    }
    /**
     * ```
     * Base schema if applicable.
     * ```
     *
     * `.com.kcl.api.KclType base_schema = 16;`
     * @return Whether the baseSchema field is set.
     */
    public fun hasBaseSchema(): kotlin.Boolean {
      return _builder.hasBaseSchema()
    }

    public val KclTypeKt.Dsl.baseSchemaOrNull: com.kcl.api.Spec.KclType?
      get() = _builder.baseSchemaOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.KclType.copy(block: `com.kcl.api`.KclTypeKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.KclType =
  `com.kcl.api`.KclTypeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.kcl.api.Spec.KclTypeOrBuilder.keyOrNull: com.kcl.api.Spec.KclType?
  get() = if (hasKey()) getKey() else null

public val com.kcl.api.Spec.KclTypeOrBuilder.itemOrNull: com.kcl.api.Spec.KclType?
  get() = if (hasItem()) getItem() else null

public val com.kcl.api.Spec.KclTypeOrBuilder.baseSchemaOrNull: com.kcl.api.Spec.KclType?
  get() = if (hasBaseSchema()) getBaseSchema() else null

