// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializeerror")
public inline fun error(block: com.kcl.api.ErrorKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.Error =
  com.kcl.api.ErrorKt.Dsl._create(com.kcl.api.Spec.Error.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message representing an error.
 * ```
 *
 * Protobuf type `com.kcl.api.Error`
 */
public object ErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.Error.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.Error.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.Error = _builder.build()

    /**
     * ```
     * Level of the error (e.g., "Error", "Warning").
     * ```
     *
     * `string level = 1;`
     */
    public var level: kotlin.String
      @JvmName("getLevel")
      get() = _builder.level
      @JvmName("setLevel")
      set(value) {
        _builder.level = value
      }
    /**
     * ```
     * Level of the error (e.g., "Error", "Warning").
     * ```
     *
     * `string level = 1;`
     */
    public fun clearLevel() {
      _builder.clearLevel()
    }

    /**
     * ```
     * Error code. (e.g., "E1001")
     * ```
     *
     * `string code = 2;`
     */
    public var code: kotlin.String
      @JvmName("getCode")
      get() = _builder.code
      @JvmName("setCode")
      set(value) {
        _builder.code = value
      }
    /**
     * ```
     * Error code. (e.g., "E1001")
     * ```
     *
     * `string code = 2;`
     */
    public fun clearCode() {
      _builder.clearCode()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MessagesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     */
     public val messages: com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.messagesList
      )
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     * @param value The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMessages")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.add(value: com.kcl.api.Spec.Message) {
      _builder.addMessages(value)
    }
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     * @param value The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMessages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.plusAssign(value: com.kcl.api.Spec.Message) {
      add(value)
    }
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     * @param values The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMessages")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.addAll(values: kotlin.collections.Iterable<com.kcl.api.Spec.Message>) {
      _builder.addAllMessages(values)
    }
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     * @param values The messages to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMessages")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.plusAssign(values: kotlin.collections.Iterable<com.kcl.api.Spec.Message>) {
      addAll(values)
    }
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     * @param index The index to set the value at.
     * @param value The messages to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMessages")
    public operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.set(index: kotlin.Int, value: com.kcl.api.Spec.Message) {
      _builder.setMessages(index, value)
    }
    /**
     * ```
     * List of error messages.
     * ```
     *
     * `repeated .com.kcl.api.Message messages = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMessages")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.Message, MessagesProxy>.clear() {
      _builder.clearMessages()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.Error.copy(block: `com.kcl.api`.ErrorKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.Error =
  `com.kcl.api`.ErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

