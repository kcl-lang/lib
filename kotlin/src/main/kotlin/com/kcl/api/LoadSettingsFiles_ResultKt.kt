// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializeloadSettingsFilesResult")
public inline fun loadSettingsFilesResult(block: com.kcl.api.LoadSettingsFiles_ResultKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.LoadSettingsFiles_Result =
  com.kcl.api.LoadSettingsFiles_ResultKt.Dsl._create(com.kcl.api.Spec.LoadSettingsFiles_Result.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message for load settings files response.
 * ```
 *
 * Protobuf type `com.kcl.api.LoadSettingsFiles_Result`
 */
public object LoadSettingsFiles_ResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.LoadSettingsFiles_Result.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.LoadSettingsFiles_Result.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.LoadSettingsFiles_Result = _builder.build()

    /**
     * ```
     * KCL CLI configuration.
     * ```
     *
     * `.com.kcl.api.CliConfig kcl_cli_configs = 1;`
     */
    public var kclCliConfigs: com.kcl.api.Spec.CliConfig
      @JvmName("getKclCliConfigs")
      get() = _builder.kclCliConfigs
      @JvmName("setKclCliConfigs")
      set(value) {
        _builder.kclCliConfigs = value
      }
    /**
     * ```
     * KCL CLI configuration.
     * ```
     *
     * `.com.kcl.api.CliConfig kcl_cli_configs = 1;`
     */
    public fun clearKclCliConfigs() {
      _builder.clearKclCliConfigs()
    }
    /**
     * ```
     * KCL CLI configuration.
     * ```
     *
     * `.com.kcl.api.CliConfig kcl_cli_configs = 1;`
     * @return Whether the kclCliConfigs field is set.
     */
    public fun hasKclCliConfigs(): kotlin.Boolean {
      return _builder.hasKclCliConfigs()
    }

    public val LoadSettingsFiles_ResultKt.Dsl.kclCliConfigsOrNull: com.kcl.api.Spec.CliConfig?
      get() = _builder.kclCliConfigsOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class KclOptionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     */
     public val kclOptions: com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.kclOptionsList
      )
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     * @param value The kclOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addKclOptions")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.add(value: com.kcl.api.Spec.KeyValuePair) {
      _builder.addKclOptions(value)
    }
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     * @param value The kclOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignKclOptions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.plusAssign(value: com.kcl.api.Spec.KeyValuePair) {
      add(value)
    }
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     * @param values The kclOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllKclOptions")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.addAll(values: kotlin.collections.Iterable<com.kcl.api.Spec.KeyValuePair>) {
      _builder.addAllKclOptions(values)
    }
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     * @param values The kclOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllKclOptions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.plusAssign(values: kotlin.collections.Iterable<com.kcl.api.Spec.KeyValuePair>) {
      addAll(values)
    }
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     * @param index The index to set the value at.
     * @param value The kclOptions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setKclOptions")
    public operator fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.set(index: kotlin.Int, value: com.kcl.api.Spec.KeyValuePair) {
      _builder.setKclOptions(index, value)
    }
    /**
     * ```
     * List of KCL options as key-value pairs.
     * ```
     *
     * `repeated .com.kcl.api.KeyValuePair kcl_options = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearKclOptions")
    public fun com.google.protobuf.kotlin.DslList<com.kcl.api.Spec.KeyValuePair, KclOptionsProxy>.clear() {
      _builder.clearKclOptions()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.LoadSettingsFiles_Result.copy(block: `com.kcl.api`.LoadSettingsFiles_ResultKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.LoadSettingsFiles_Result =
  `com.kcl.api`.LoadSettingsFiles_ResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.kcl.api.Spec.LoadSettingsFiles_ResultOrBuilder.kclCliConfigsOrNull: com.kcl.api.Spec.CliConfig?
  get() = if (hasKclCliConfigs()) getKclCliConfigs() else null

