// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializeformatPathArgs")
public inline fun formatPathArgs(block: com.kcl.api.FormatPath_ArgsKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.FormatPath_Args =
  com.kcl.api.FormatPath_ArgsKt.Dsl._create(com.kcl.api.Spec.FormatPath_Args.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message for format file path request arguments.
 * ```
 *
 * Protobuf type `com.kcl.api.FormatPath_Args`
 */
public object FormatPath_ArgsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.FormatPath_Args.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.FormatPath_Args.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.FormatPath_Args = _builder.build()

    /**
     * ```
     * Path of the file to format.
     * ```
     *
     * `string path = 1;`
     */
    public var path: kotlin.String
      @JvmName("getPath")
      get() = _builder.path
      @JvmName("setPath")
      set(value) {
        _builder.path = value
      }
    /**
     * ```
     * Path of the file to format.
     * ```
     *
     * `string path = 1;`
     */
    public fun clearPath() {
      _builder.clearPath()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.FormatPath_Args.copy(block: `com.kcl.api`.FormatPath_ArgsKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.FormatPath_Args =
  `com.kcl.api`.FormatPath_ArgsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

