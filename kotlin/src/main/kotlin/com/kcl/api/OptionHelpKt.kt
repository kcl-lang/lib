// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializeoptionHelp")
public inline fun optionHelp(block: com.kcl.api.OptionHelpKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.OptionHelp =
  com.kcl.api.OptionHelpKt.Dsl._create(com.kcl.api.Spec.OptionHelp.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message representing a help option.
 * ```
 *
 * Protobuf type `com.kcl.api.OptionHelp`
 */
public object OptionHelpKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.OptionHelp.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.OptionHelp.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.OptionHelp = _builder.build()

    /**
     * ```
     * Name of the option.
     * ```
     *
     * `string name = 1;`
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.name
      @JvmName("setName")
      set(value) {
        _builder.name = value
      }
    /**
     * ```
     * Name of the option.
     * ```
     *
     * `string name = 1;`
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * ```
     * Type of the option.
     * ```
     *
     * `string type = 2;`
     */
    public var type: kotlin.String
      @JvmName("getType")
      get() = _builder.type
      @JvmName("setType")
      set(value) {
        _builder.type = value
      }
    /**
     * ```
     * Type of the option.
     * ```
     *
     * `string type = 2;`
     */
    public fun clearType() {
      _builder.clearType()
    }

    /**
     * ```
     * Flag indicating if the option is required.
     * ```
     *
     * `bool required = 3;`
     */
    public var required: kotlin.Boolean
      @JvmName("getRequired")
      get() = _builder.required
      @JvmName("setRequired")
      set(value) {
        _builder.required = value
      }
    /**
     * ```
     * Flag indicating if the option is required.
     * ```
     *
     * `bool required = 3;`
     */
    public fun clearRequired() {
      _builder.clearRequired()
    }

    /**
     * ```
     * Default value of the option.
     * ```
     *
     * `string default_value = 4;`
     */
    public var defaultValue: kotlin.String
      @JvmName("getDefaultValue")
      get() = _builder.defaultValue
      @JvmName("setDefaultValue")
      set(value) {
        _builder.defaultValue = value
      }
    /**
     * ```
     * Default value of the option.
     * ```
     *
     * `string default_value = 4;`
     */
    public fun clearDefaultValue() {
      _builder.clearDefaultValue()
    }

    /**
     * ```
     * Help text for the option.
     * ```
     *
     * `string help = 5;`
     */
    public var help: kotlin.String
      @JvmName("getHelp")
      get() = _builder.help
      @JvmName("setHelp")
      set(value) {
        _builder.help = value
      }
    /**
     * ```
     * Help text for the option.
     * ```
     *
     * `string help = 5;`
     */
    public fun clearHelp() {
      _builder.clearHelp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.OptionHelp.copy(block: `com.kcl.api`.OptionHelpKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.OptionHelp =
  `com.kcl.api`.OptionHelpKt.Dsl._create(this.toBuilder()).apply { block() }._build()

