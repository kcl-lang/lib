// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.kcl.api;

@kotlin.jvm.JvmName("-initializeexecProgramResult")
public inline fun execProgramResult(block: com.kcl.api.ExecProgram_ResultKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.ExecProgram_Result =
  com.kcl.api.ExecProgram_ResultKt.Dsl._create(com.kcl.api.Spec.ExecProgram_Result.newBuilder()).apply { block() }._build()
/**
 * ```
 * Message for execute program response.
 * ```
 *
 * Protobuf type `com.kcl.api.ExecProgram_Result`
 */
public object ExecProgram_ResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.kcl.api.Spec.ExecProgram_Result.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.kcl.api.Spec.ExecProgram_Result.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.kcl.api.Spec.ExecProgram_Result = _builder.build()

    /**
     * ```
     * Result in JSON format.
     * ```
     *
     * `string json_result = 1;`
     */
    public var jsonResult: kotlin.String
      @JvmName("getJsonResult")
      get() = _builder.jsonResult
      @JvmName("setJsonResult")
      set(value) {
        _builder.jsonResult = value
      }
    /**
     * ```
     * Result in JSON format.
     * ```
     *
     * `string json_result = 1;`
     */
    public fun clearJsonResult() {
      _builder.clearJsonResult()
    }

    /**
     * ```
     * Result in YAML format.
     * ```
     *
     * `string yaml_result = 2;`
     */
    public var yamlResult: kotlin.String
      @JvmName("getYamlResult")
      get() = _builder.yamlResult
      @JvmName("setYamlResult")
      set(value) {
        _builder.yamlResult = value
      }
    /**
     * ```
     * Result in YAML format.
     * ```
     *
     * `string yaml_result = 2;`
     */
    public fun clearYamlResult() {
      _builder.clearYamlResult()
    }

    /**
     * ```
     * Log message from execution.
     * ```
     *
     * `string log_message = 3;`
     */
    public var logMessage: kotlin.String
      @JvmName("getLogMessage")
      get() = _builder.logMessage
      @JvmName("setLogMessage")
      set(value) {
        _builder.logMessage = value
      }
    /**
     * ```
     * Log message from execution.
     * ```
     *
     * `string log_message = 3;`
     */
    public fun clearLogMessage() {
      _builder.clearLogMessage()
    }

    /**
     * ```
     * Error message from execution.
     * ```
     *
     * `string err_message = 4;`
     */
    public var errMessage: kotlin.String
      @JvmName("getErrMessage")
      get() = _builder.errMessage
      @JvmName("setErrMessage")
      set(value) {
        _builder.errMessage = value
      }
    /**
     * ```
     * Error message from execution.
     * ```
     *
     * `string err_message = 4;`
     */
    public fun clearErrMessage() {
      _builder.clearErrMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.kcl.api.Spec.ExecProgram_Result.copy(block: `com.kcl.api`.ExecProgram_ResultKt.Dsl.() -> kotlin.Unit): com.kcl.api.Spec.ExecProgram_Result =
  `com.kcl.api`.ExecProgram_ResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

